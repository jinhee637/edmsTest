<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="index">
	<typeAlias  alias="loginVO" type="kr.co.kibi.edms.com.service.LoginVO"/>
	<typeAlias  alias="userVO" type="kr.co.kibi.edms.com.service.UserVO"/>
	<typeAlias  alias="groupVO" type="kr.co.kibi.edms.admin.service.GroupVO"/>
	<typeAlias  alias="categoryVO" type="kr.co.kibi.edms.com.service.CategoryVO"/>
	<!-- 로그인 처리를 위한 resultMap -->
	<resultMap id="login" class="loginVO">
		<result property="party_seq" column="party_seq" columnIndex="1"/>
		<result property="id_if" column="id_if" columnIndex="2"/>
		<result property="pw_if" column="pw_if" columnIndex="3"/>
	</resultMap>
	<select id="indexDao.actionLogin" resultClass="loginVO">
		<![CDATA[
			SELECT 
				u.party_seq party_seq,
				id_if,
				pw_if,
				user_nm,
				docregaut_yn,
				dept_cd,
				partystt_cd,
				dept_nm,
				duty_if,
				tel_no_no,
				email_if,
				group_seq,
				nvl(bizrole_cd,'USER') bizrole_cd
			  FROM ED_USER U
			  	LEFT JOIN ED_BIZROLE B
			  	ON U.PARTY_SEQ=B.PARTY_SEQ
			 WHERE ID_IF = #id_if#
			   AND PW_IF = #pw_if#
			]]>
	</select>
    <select	id="indexDao.checkUser" parameterClass="userVO" resultClass="int">
    	<![CDATA[
    		SELECT COUNT(*) cnt
    		FROM ED_USER
    		WHERE ID_IF=#id_if#
    		AND PARTYSTT_CD <> 'D'
   		]]>
    </select>
    <insert id="indexDao.insertUser" parameterClass="userVO" >
    	<selectKey keyProperty="party_seq" resultClass="int" type="pre">
			SELECT SQ_USER.nextval FROM DUAL
		</selectKey>
		<![CDATA[
			INSERT INTO ED_USER 
			(
				PARTY_SEQ
				,ID_IF
				,PW_IF
				,USER_NM
				,DOCREGAUT_YN
				,PARTYSTT_CD
				,DUTY_IF
				,TEL_NO_NO
				,EMAIL_IF
				,GROUP_SEQ
			)
			VALUES 
			(
				#party_seq#
				,#id_if#
				,#pw_if#
				,#user_nm#
				,'N'
				,'W'
				,#duty_if#
				,#tel_no_no#
				,#email_if#
				,#group_seq#
			 )
				
		
		]]>
	</insert>
	<select id="indexDao.selectGroup" parameterClass="groupVO" resultClass="groupVO">
	<![CDATA[
		SELECT 
			GROUP_SEQ
			,GROUP_NM
 		FROM ED_GROUP
 		ORDER BY GROUP_NM
	]]>
	</select>
	<select id="indexDao.selectLeftCate" resultClass="categoryVO">
			<!-- SELECT NVL(D.CAT_SEQ,0) cat_seq
				,D.CAT_NM cat_nm
				,NVL(D.PARCAT_SEQ,0) parcat_seq
				,D.CAT_DC cat_dc
				,(SELECT COUNT(*) FROM ED_CATEGORY WHERE PARCAT_SEQ=D.CAT_SEQ) cnt
				,level depth
			FROM ED_CATEGORY D
			WHERE CAT_SEQ <![CDATA[<>]]> 0
			<dynamic>
				<isNotEqual prepend="and" property="isAdmin" compareValue="Y">
					CAT_SEQ IN (SELECT CAT_SEQ FROM ED_AUTHORITY
				  			WHERE GROUP_SEQ=#group_seq#
				  			UNION ALL
						   	SELECT CAT_SEQ FROM ED_AUTHORITY
						   	GROUP BY CAT_SEQ
						   	HAVING MAX(GROUP_SEQ)=0)
				</isNotEqual> 
			</dynamic>
 			START WITH D.CAT_SEQ = 0
			CONNECT BY PRIOR  D.CAT_SEQ = D.PARCAT_SEQ -->
			SELECT NVL(D.CAT_SEQ,0) cat_seq     
				   ,D.CAT_NM cat_nm     
				   ,NVL(D.PARCAT_SEQ,0) parcat_seq     
				   ,D.CAT_DC cat_dc     
				   ,(SELECT COUNT(*) FROM ED_CATEGORY WHERE PARCAT_SEQ=D.CAT_SEQ) cnt    
 				   ,level depth   
  			FROM (
  					SELECT *
  	   			  	FROM ED_CATEGORY
  	   			  	<dynamic>
						<isNotEqual prepend="WHERE" property="isAdmin" compareValue="Y">  
		   			  	 	CAT_SEQ IN 
		   			  					(
		   			  						SELECT CAT_SEQ 
		   			  						FROM ED_AUTHORITY
	   			          					WHERE GROUP_SEQ=#group_seq#          
											UNION ALL
											SELECT CAT_SEQ 
											FROM ED_AUTHORITY
						 					GROUP BY CAT_SEQ
						 					HAVING MAX(GROUP_SEQ)=0
						 				)
					   		OR CAT_SEQ=0
						</isNotEqual> 
					</dynamic>				   	
				) D
			 WHERE CAT_SEQ <![CDATA[<>]]> 0    		
			 START WITH D.CAT_SEQ = 0   
			 CONNECT BY PRIOR  D.CAT_SEQ = D.PARCAT_SEQ
	</select>
</sqlMap>
